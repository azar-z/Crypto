version: "3.9"

services:

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: 'python manage.py runserver 0.0.0.0:8000'
    volumes:
      - .:/code
    ports:
      - '8000:8000'
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - redis


  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: 'celery worker --app=core --loglevel=info --logfile=logs/celery.log'
    volumes:
      - .:/code
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - web
      - redis


  redis:
    image: redis:6-alpineversion: "3.9"

services:

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: 'python manage.py runserver 0.0.0.0:8000'
    volumes:
      - .:/code
    ports:
      - '8000:8000'
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - db


  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: 'celery worker --app=core --loglevel=info --logfile=logs/celery.log'
    volumes:
      - .:/code
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - web
      - redis
      - db


  redis:
    image: redis:6-alpine

  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./volumes/postgres_volume/:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=db
      - POSTGRES_PASSWORD=password